// Generated by view binder compiler. Do not edit!
package com.zp.z_file.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.zp.z_file.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentZfileListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView zfileListCenterTitle;

  @NonNull
  public final ViewStub zfileListEmptyStub;

  @NonNull
  public final RecyclerView zfileListListRecyclerView;

  @NonNull
  public final ViewStub zfileListNoPermissionStub;

  @NonNull
  public final RecyclerView zfileListPathRecyclerView;

  @NonNull
  public final SwipeRefreshLayout zfileListRefreshLayout;

  @NonNull
  public final Toolbar zfileListToolBar;

  private FragmentZfileListBinding(@NonNull LinearLayout rootView,
      @NonNull TextView zfileListCenterTitle, @NonNull ViewStub zfileListEmptyStub,
      @NonNull RecyclerView zfileListListRecyclerView, @NonNull ViewStub zfileListNoPermissionStub,
      @NonNull RecyclerView zfileListPathRecyclerView,
      @NonNull SwipeRefreshLayout zfileListRefreshLayout, @NonNull Toolbar zfileListToolBar) {
    this.rootView = rootView;
    this.zfileListCenterTitle = zfileListCenterTitle;
    this.zfileListEmptyStub = zfileListEmptyStub;
    this.zfileListListRecyclerView = zfileListListRecyclerView;
    this.zfileListNoPermissionStub = zfileListNoPermissionStub;
    this.zfileListPathRecyclerView = zfileListPathRecyclerView;
    this.zfileListRefreshLayout = zfileListRefreshLayout;
    this.zfileListToolBar = zfileListToolBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentZfileListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentZfileListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_zfile_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentZfileListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.zfile_list_centerTitle;
      TextView zfileListCenterTitle = ViewBindings.findChildViewById(rootView, id);
      if (zfileListCenterTitle == null) {
        break missingId;
      }

      id = R.id.zfile_list_emptyStub;
      ViewStub zfileListEmptyStub = ViewBindings.findChildViewById(rootView, id);
      if (zfileListEmptyStub == null) {
        break missingId;
      }

      id = R.id.zfile_list_listRecyclerView;
      RecyclerView zfileListListRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (zfileListListRecyclerView == null) {
        break missingId;
      }

      id = R.id.zfile_list_noPermissionStub;
      ViewStub zfileListNoPermissionStub = ViewBindings.findChildViewById(rootView, id);
      if (zfileListNoPermissionStub == null) {
        break missingId;
      }

      id = R.id.zfile_list_pathRecyclerView;
      RecyclerView zfileListPathRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (zfileListPathRecyclerView == null) {
        break missingId;
      }

      id = R.id.zfile_list_refreshLayout;
      SwipeRefreshLayout zfileListRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (zfileListRefreshLayout == null) {
        break missingId;
      }

      id = R.id.zfile_list_toolBar;
      Toolbar zfileListToolBar = ViewBindings.findChildViewById(rootView, id);
      if (zfileListToolBar == null) {
        break missingId;
      }

      return new FragmentZfileListBinding((LinearLayout) rootView, zfileListCenterTitle,
          zfileListEmptyStub, zfileListListRecyclerView, zfileListNoPermissionStub,
          zfileListPathRecyclerView, zfileListRefreshLayout, zfileListToolBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
