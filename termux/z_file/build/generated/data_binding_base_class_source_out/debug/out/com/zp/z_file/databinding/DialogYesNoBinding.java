// Generated by view binder compiler. Do not edit!
package com.zp.z_file.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.zp.z_file.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogYesNoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView dialogMsg;

  @NonNull
  public final TextView dialogNo;

  @NonNull
  public final TextView dialogTitle;

  @NonNull
  public final TextView dialogYes;

  @NonNull
  public final EditText inputSystemName;

  private DialogYesNoBinding(@NonNull LinearLayout rootView, @NonNull TextView dialogMsg,
      @NonNull TextView dialogNo, @NonNull TextView dialogTitle, @NonNull TextView dialogYes,
      @NonNull EditText inputSystemName) {
    this.rootView = rootView;
    this.dialogMsg = dialogMsg;
    this.dialogNo = dialogNo;
    this.dialogTitle = dialogTitle;
    this.dialogYes = dialogYes;
    this.inputSystemName = inputSystemName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogYesNoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogYesNoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_yes_no, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogYesNoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialog_msg;
      TextView dialogMsg = ViewBindings.findChildViewById(rootView, id);
      if (dialogMsg == null) {
        break missingId;
      }

      id = R.id.dialog_no;
      TextView dialogNo = ViewBindings.findChildViewById(rootView, id);
      if (dialogNo == null) {
        break missingId;
      }

      id = R.id.dialog_title;
      TextView dialogTitle = ViewBindings.findChildViewById(rootView, id);
      if (dialogTitle == null) {
        break missingId;
      }

      id = R.id.dialog_yes;
      TextView dialogYes = ViewBindings.findChildViewById(rootView, id);
      if (dialogYes == null) {
        break missingId;
      }

      id = R.id.input_system_name;
      EditText inputSystemName = ViewBindings.findChildViewById(rootView, id);
      if (inputSystemName == null) {
        break missingId;
      }

      return new DialogYesNoBinding((LinearLayout) rootView, dialogMsg, dialogNo, dialogTitle,
          dialogYes, inputSystemName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
