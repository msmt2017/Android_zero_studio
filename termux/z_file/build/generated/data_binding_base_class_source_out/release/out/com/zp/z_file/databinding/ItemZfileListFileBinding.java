// Generated by view binder compiler. Do not edit!
package com.zp.z_file.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.zp.z_file.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemZfileListFileBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout ff;

  @NonNull
  public final ImageView itemZfileFileBoxPic;

  @NonNull
  public final CheckBox itemZfileListFileBox1;

  @NonNull
  public final TextView itemZfileListFileBox2;

  @NonNull
  public final FrameLayout itemZfileListFileBoxLayout;

  @NonNull
  public final TextView itemZfileListFileDateTxt;

  @NonNull
  public final TextView itemZfileListFileNameTxt;

  @NonNull
  public final ImageView itemZfileListFilePic;

  @NonNull
  public final TextView itemZfileListFileSizeTxt;

  @NonNull
  public final ImageView itemZfileListSymlink;

  private ItemZfileListFileBinding(@NonNull FrameLayout rootView, @NonNull FrameLayout ff,
      @NonNull ImageView itemZfileFileBoxPic, @NonNull CheckBox itemZfileListFileBox1,
      @NonNull TextView itemZfileListFileBox2, @NonNull FrameLayout itemZfileListFileBoxLayout,
      @NonNull TextView itemZfileListFileDateTxt, @NonNull TextView itemZfileListFileNameTxt,
      @NonNull ImageView itemZfileListFilePic, @NonNull TextView itemZfileListFileSizeTxt,
      @NonNull ImageView itemZfileListSymlink) {
    this.rootView = rootView;
    this.ff = ff;
    this.itemZfileFileBoxPic = itemZfileFileBoxPic;
    this.itemZfileListFileBox1 = itemZfileListFileBox1;
    this.itemZfileListFileBox2 = itemZfileListFileBox2;
    this.itemZfileListFileBoxLayout = itemZfileListFileBoxLayout;
    this.itemZfileListFileDateTxt = itemZfileListFileDateTxt;
    this.itemZfileListFileNameTxt = itemZfileListFileNameTxt;
    this.itemZfileListFilePic = itemZfileListFilePic;
    this.itemZfileListFileSizeTxt = itemZfileListFileSizeTxt;
    this.itemZfileListSymlink = itemZfileListSymlink;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemZfileListFileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemZfileListFileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_zfile_list_file, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemZfileListFileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ff;
      FrameLayout ff = ViewBindings.findChildViewById(rootView, id);
      if (ff == null) {
        break missingId;
      }

      id = R.id.item_zfile_file_box_pic;
      ImageView itemZfileFileBoxPic = ViewBindings.findChildViewById(rootView, id);
      if (itemZfileFileBoxPic == null) {
        break missingId;
      }

      id = R.id.item_zfile_list_file_box1;
      CheckBox itemZfileListFileBox1 = ViewBindings.findChildViewById(rootView, id);
      if (itemZfileListFileBox1 == null) {
        break missingId;
      }

      id = R.id.item_zfile_list_file_box2;
      TextView itemZfileListFileBox2 = ViewBindings.findChildViewById(rootView, id);
      if (itemZfileListFileBox2 == null) {
        break missingId;
      }

      id = R.id.item_zfile_list_file_boxLayout;
      FrameLayout itemZfileListFileBoxLayout = ViewBindings.findChildViewById(rootView, id);
      if (itemZfileListFileBoxLayout == null) {
        break missingId;
      }

      id = R.id.item_zfile_list_file_dateTxt;
      TextView itemZfileListFileDateTxt = ViewBindings.findChildViewById(rootView, id);
      if (itemZfileListFileDateTxt == null) {
        break missingId;
      }

      id = R.id.item_zfile_list_file_nameTxt;
      TextView itemZfileListFileNameTxt = ViewBindings.findChildViewById(rootView, id);
      if (itemZfileListFileNameTxt == null) {
        break missingId;
      }

      id = R.id.item_zfile_list_file_pic;
      ImageView itemZfileListFilePic = ViewBindings.findChildViewById(rootView, id);
      if (itemZfileListFilePic == null) {
        break missingId;
      }

      id = R.id.item_zfile_list_file_sizeTxt;
      TextView itemZfileListFileSizeTxt = ViewBindings.findChildViewById(rootView, id);
      if (itemZfileListFileSizeTxt == null) {
        break missingId;
      }

      id = R.id.item_zfile_list_symlink;
      ImageView itemZfileListSymlink = ViewBindings.findChildViewById(rootView, id);
      if (itemZfileListSymlink == null) {
        break missingId;
      }

      return new ItemZfileListFileBinding((FrameLayout) rootView, ff, itemZfileFileBoxPic,
          itemZfileListFileBox1, itemZfileListFileBox2, itemZfileListFileBoxLayout,
          itemZfileListFileDateTxt, itemZfileListFileNameTxt, itemZfileListFilePic,
          itemZfileListFileSizeTxt, itemZfileListSymlink);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
